group 'net.dankito.filechooserdialog'
version '1.0.0-SNAPSHOT'
def mavenArtifactId = "filechooserdialog-android"


apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'maven'
apply plugin: 'signing'



android {
    compileSdkVersion CompileSdkVersion

    defaultConfig {
        minSdkVersion MinSdkVersion
        targetSdkVersion TargetSdkVersion

        versionCode VersionCode
        versionName VersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    configurations {
        javadocDeps
    }

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"

    implementation "com.android.support:appcompat-v7:$appCompatVersion"
    implementation "com.android.support:design:$appCompatVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    testImplementation "junit:junit:$junitVersion"

    androidTestImplementation "com.android.support.test:runner:$androidTestRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
}


/*          publish to maven central            */

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.javadocDeps
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourcesJar
}


def areSigningPropertiesSet = isPropertySet('signing.secretKeyRingFile') && isPropertySet('signing.keyId') && isPropertySet('signing.password')
def areOssrhPropertiesSet = isPropertySet('ossrhUsername') && isPropertySet('ossrhPassword')

def isPropertySet(propertyName) {
    return properties[propertyName] != null &&  ! (properties[propertyName] as String).isEmpty()
}


if(areSigningPropertiesSet) {
    signing {
        sign configurations.archives
    }
}

uploadArchives {
    repositories {
        mavenDeployer {

            if(areOssrhPropertiesSet) {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }
            }

            repository url: repositories.mavenLocal().url

            pom.project {
                name mavenArtifactId
                artifactId = mavenArtifactId
                packaging 'jar'

                description "Material Design File Chooser Dialog for Android."
                url 'https://github.com/dankito/AndroidFileChooserDialog'

                scm {
                    connection 'scm:git:git://github.com/dankito/AndroidFileChooserDialog.git'
                    developerConnection 'scm:git:git@github.com:dankito/AndroidFileChooserDialog.git'
                    url 'https://github.com/dankito/AndroidFileChooserDialog'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'dankito'
                        name 'Christian Dankl'
                        email 'maven@dankito.net'
                    }
                }
            }
        }
    }
}
